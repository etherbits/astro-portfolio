---
import type { HTMLAttributes } from "astro/types";
import { cn } from "../utils/tailwind";
interface Props extends HTMLAttributes<"button"> {
  class?: string;
}

const { class: btnClass, ...rest } = Astro.props;
const baseClass = `text-base block w-fit whitespace-nowrap rounded-[4px]
border border-slate-300 bg-black px-5 py-3 lg:px-6 lg:py-4 tracking-wider text-slate-300 sm:text-clamp-base`;
---

<div button-container class={"flex relative group h-auto cursor-pointer w-fit"}>
  <button
    {...rest}
    outline-button
    type="button"
    class={cn(baseClass, btnClass)}
  >
    <slot />
  </button>
  <div
    class="absolute border-neutral-600 top-0 translate-y-[18%]
  left-0 w-full h-full border rounded-[4px] z-[-1]"
  >
  </div>
</div>

<script>
  import animejs from "animejs/lib/anime.es";

  function startClickAnim(btn: HTMLButtonElement) {
    animejs({
      targets: btn,
      translateY: "18%",
      scale: 1,
      duration: 150,
      easing: "easeOutQuad",
    });
  }

  function startHoverAnim(btn: HTMLButtonElement) {
    animejs({
      targets: btn,
      translateY: "-4%",
      scale: 1.06,
      duration: 150,
      easing: "easeOutQuad",
    });
  }

  function resetAnim(btn: HTMLButtonElement) {
    animejs({
      targets: btn,
      translateY: "0%",
      scale: 1.04,
      duration: 150,
      easing: "easeOutQuad",
    });
  }

  const addTouchAnimation = () => {
    const btnContainers = document.querySelectorAll(
      "[button-container]",
    ) as NodeListOf<HTMLDivElement>;

    btnContainers.forEach((btnContainer) => {
      const btn = btnContainer.querySelector(
        "[outline-button]",
      ) as HTMLButtonElement;

      resetAnim(btn);

      btnContainer.addEventListener("mousedown", () => startClickAnim(btn));
      btnContainer.addEventListener("mouseenter", () => startHoverAnim(btn));
      btnContainer.addEventListener("mouseleave", () => resetAnim(btn));
      btnContainer.addEventListener(
        "touchstart",
        () => {
          startClickAnim(btn);
        },
        { passive: true },
      );
      document.addEventListener("mouseup", () => {
        resetAnim(btn);
      });
      document.addEventListener(
        "touchend",
        () => {
          resetAnim(btn);
        },
        { passive: true },
      );
      document.addEventListener("dragend", () => {
        resetAnim(btn);
      });
    });
  };

  addTouchAnimation();
  document.addEventListener("astro:after-swap", addTouchAnimation);
</script>
