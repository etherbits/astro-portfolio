---
import type { languages } from "../i18n/ui";
import { generateTranslator, getLangFromUrl } from "../i18n/utils";
import { cn } from "../utils/tailwind";
import Button from "./Button.astro";
import JourneyCard, { type Journey } from "./JourneyCard.astro";
import Link from "./Link.astro";
interface Props {
  journeys: Journey[];
}

const lang = getLangFromUrl(Astro.url) as keyof typeof languages;
const t = generateTranslator(lang);

const { props } = Astro;
---

<ul
  class="mb-14 mt-[4vh] grid w-[100%] items-center gap-0 [grid-auto-rows:1fr]"
>
  {
    props.journeys.map((journey, i) => {
      const isOdd = i % 2 !== 0;
      return (
        <li class="relative z-[-1] flex h-full flex-col justify-center py-2">
          <div
            class={cn(
              "my-auto flex h-fit w-[46%] flex-col rounded-xl bg-gradient-to-r px-6 py-4 backdrop-blur-lg",
              {
                "ml-auto": isOdd,
              },
            )}
          >
            <JourneyCard journey={journey} reverse={i % 2 !== 0} />
          </div>
          <div>
            <div class="absolute left-[50%] top-[50%] block h-5 w-5 translate-x-[-50%] translate-y-[-50%] rounded-full bg-blue-300 [transform-origin:0_0]" />
            <div
              class={cn(
                "absolute left-[50%] top-[50%] z-[-1] flex  h-[100%] w-1 translate-x-[-50%] flex-col  justify-between",
              )}
            >
              {[...Array(3)].map((_) => {
                return (
                  <div class="h-[24%] w-full rounded-full bg-slate-600 [transform-origin:-100%_0]" />
                );
              })}
            </div>
          </div>
        </li>
      );
    })
  }
  <div class="relative grid h-full grid-rows-[1fr_1fr] justify-center">
    <div class="row-start-2 row-end-3 mt-8" >
      <Link href="/contact-me">
        <Button>{t("journey.contact_button")}</Button>
      </Link>
    </div>
  </div>
</ul>
