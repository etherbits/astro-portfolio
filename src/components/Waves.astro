---
import type { HTMLAttributes } from "astro/types";
import { waveObjs } from "../waves";
import { cn } from "../utils/tailwind";

type WaveKey = keyof typeof waveObjs;

interface Props extends HTMLAttributes<"svg"> {
  type: WaveKey;
  delay?: number;
}

const { delay = 0, ...props } = Astro.props;

const { viewBox, lines } = waveObjs[props.type];
---

<svg
  viewBox={viewBox}
  fill="none"
  xmlns="http://www.w3.org/2000/svg"
  preserveAspectRatio="none"
  class={cn(
    "fixed pointer-events-none overflow-hidden stroke-slate-700 stroke-[2px]",
    props.class,
  )}
  {...props}
>
  {
    lines.map((line, i) => (
      <path
        d={line.d}
        class="animate-bgLine [stroke-dasharray:100] [stroke-dashoffset:100]"
        pathLength="100"
        style={{
          animationDelay: `${i / 16}s`,
          opacity: Math.min(i / 10 + 0.1, 1),
        }}
      />
    ))
  }
</svg>

<script>
import {gsap} from 'gsap'

</script>
