---
import ResponsiveNavigation from "./ResponsiveNavigation.astro";
import LanguageToggle from "./LanguageToggle.astro";
import Link from "../Link.astro";
---

<header
  id="header"
  class="sticky top-0 z-[1] grid grid-cols-[1fr_1fr] items-center justify-between px-5 py-3 before:absolute before:z-[-1] before:h-full before:w-full before:bg-gradient-to-br before:from-[#000000bb] before:to-[#00000000] before:backdrop-blur-lg before:content-[''] md:grid-cols-[1fr_auto_1fr] md:px-10 md:py-6"
>
  <Link
    href="/"
    class="w-20% mr-6 w-fit whitespace-nowrap bg-gradient-to-br from-blue-200 to-slate-900 bg-clip-text text-center text-[24px] font-extrabold tracking-widest text-black"
    style={{ WebkitTextStroke: "2px transparent" }}
  >
    NQ
  </Link>
  <ResponsiveNavigation />

  <div class="ml-auto hidden md:block">
    <LanguageToggle />
  </div>
</header>

<script>
  function getScrollbarWidth() {
    const outer = document.createElement("div");
    outer.style.visibility = "hidden";
    outer.style.overflow = "scroll"; // forcing scrollbar to appear
    document.body.appendChild(outer);

    // Creating inner element and placing it in the container
    const inner = document.createElement("div");
    outer.appendChild(inner);

    // Calculating difference between container's full width and the child width
    const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;

    // Removing temporary elements from the DOM
    outer.parentNode?.removeChild(outer);

    return scrollbarWidth;
  }

  function attachHeaderGutter() {
    if (window.innerWidth < 640) return;

    const header = document.querySelector("#header") as HTMLHeadingElement;
    const isBodyScrollable = document.body.scrollHeight > window.innerHeight;
    const scrollbarWidth = getScrollbarWidth();

    if (isBodyScrollable || scrollbarWidth < 1) {
      return;
    }

    header.style.paddingRight =
      +getComputedStyle(header).paddingRight.replace("px", "") +
      getScrollbarWidth() +
      "px";
  }

  attachHeaderGutter();
  document.addEventListener("astro:after-swap", attachHeaderGutter);
</script>
